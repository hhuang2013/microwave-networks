//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MicrowaveNetworksTests.TouchstoneTests {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SampleFiles {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SampleFiles() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MicrowaveNetworksTests.TouchstoneTests.SampleFiles", typeof(SampleFiles).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ! 4-port S-parameter data, taken at three frequency points
        ///! note that data points need not be aligned
        ///# GHz S MA R 50
        ///5.00000 0.60 161.24 0.40 -42.20 0.42 -66.58 0.53 -79.34 !row 1
        ///        0.40 -42.20 0.60 161.20 0.53 -79.34 0.42 -66.58 !row 2
        ///        0.42 -66.58 0.53 -79.34 0.60 161.24 0.40 -42.20 !row 3
        ///        0.53 -79.34 0.42 -66.58 0.40 -42.20 0.60 161.24 !row 4
        ///6.00000 0.57 150.37 0.40 -44.34 0.41 -81.24 0.57 -95.77 !row 1
        ///        0.40 -44.34 0.57 150.37 0.57 -95.77 0.41 -81.24 !row 2
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FourPort_v1 {
            get {
                return ResourceManager.GetString("FourPort_v1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # MHz S MA R 75
        ///!freq magZ11 angZ11
        ///100 0.99 -4
        ///200 0.80 -22
        ///300 0.707 -45
        ///400 0.40 -62
        ///500 0.01 -89.
        /// </summary>
        internal static string OnePort_v1 {
            get {
                return ResourceManager.GetString("OnePort_v1", resourceCulture);
            }
        }
    }
}
